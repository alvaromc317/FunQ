% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fqpca.R
\name{fqpca}
\alias{fqpca}
\title{FQPCA}
\usage{
fqpca(
  Y = NULL,
  data = NULL,
  colname = NULL,
  npc = 2,
  quantile.value = 0.5,
  periodic = TRUE,
  splines.df = 10,
  method = "fn",
  alpha.ridge = 0,
  tol = 0.001,
  n.iters = 20,
  verbose = FALSE,
  seed = NULL,
  parallelized.scores = FALSE,
  num.cores = NULL
)
}
\arguments{
\item{Y}{An \eqn{(N \times T)} matrix or a tf object from the tidyfun package.}

\item{data}{data.frame containing the functional data as a tf column.}

\item{colname}{The name of the column containing the functional data. If used, data argument must not be NULL.}

\item{npc}{The number of estimated components.}

\item{quantile.value}{The quantile considered.}

\item{periodic}{Boolean indicating if the data is expected to
be periodic (start coincides with end) or not.}

\item{splines.df}{Degrees of freedom for the splines.}

\item{method}{Method used in the resolution of the quantile
regression model. It currently accepts the methods
\code{c('br', 'fn', 'pfn', 'sfn')} from \code{quantreg} package along with
any available solver in \code{CVXR} package.}

\item{alpha.ridge}{Hyper parameter controlling the penalization
on the second derivative of the splines. It has effect
only with \code{CVXR} methods. Experimantal component.}

\item{tol}{Tolerance on the convergence of the algorithm.}

\item{n.iters}{Maximum number of iterations.}

\item{verbose}{Boolean indicating the verbosity.}

\item{seed}{Seed for the random generator number.}

\item{parallelized.scores}{Should the scores be computed in parallel? Experimantal component.}

\item{num.cores}{Number of cores to use in parallelized executions.}
}
\value{
fqpca_object
}
\description{
Solves the functional quantile principal component analysis methodology
}
\examples{
# Generate fake dataset with 150 observations and 144 time points

Y <- matrix(rep(sin(seq(0, 2*pi, length.out = 144)), 150), byrow = TRUE, nrow = 150)
Y <- Y + matrix(rnorm(150*144, 0, 0.4), nrow = 150)

# Add missing observations
Y[sample(150*144, as.integer(0.2*150*144))] <- NA

results <- fqpca(Y = Y, npc = 2, quantile.value = 0.5)

loadings <- results$loadings
scores <- results$scores
}
