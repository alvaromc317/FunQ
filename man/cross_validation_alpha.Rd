% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fqpca-utils.R
\name{cross_validation_alpha}
\alias{cross_validation_alpha}
\title{CROSS VALIDATION OF ALPHA.RIDGE}
\usage{
cross_validation_alpha(
  Y = NULL,
  data = NULL,
  colname = NULL,
  npc = 2,
  pve = NULL,
  quantile.value = 0.5,
  alpha.grid = c(0, 1e-16, 1e-14),
  n.folds = 3,
  return.models = TRUE,
  criteria = "points",
  periodic = TRUE,
  splines.df = 10,
  tol = 0.001,
  n.iters = 20,
  method = "SCS",
  verbose.fqpca = FALSE,
  verbose.cv = TRUE,
  seed = NULL
)
}
\arguments{
\item{Y}{An \eqn{(N \times T)} matrix or a tf object from the tidyfun package.}

\item{data}{data.frame containing the functional data as a tf column.}

\item{colname}{The name of the column containing the functional data. If used, data argument must not be NULL.}

\item{npc}{The number of estimated components.}

\item{pve}{Float between 0 and 1. Percentage of variability explained by components. This affects the number of components used in the curve reconstruction and error estimation. Set to NULL to avoid this behavior.}

\item{quantile.value}{The quantile considered.}

\item{alpha.grid}{An array containing the list of possible alpha values (these should be always positive numbers).}

\item{n.folds}{Number of folds to be used on cross validation.}

\item{return.models}{Should the list of all the models built be returned?}

\item{criteria}{Criteria used to divide the data. Valid values are \code{'rows'}, which considers the division based on full rows, or \code{'points'}, which considers the division based on points within the matrix.}

\item{periodic}{Boolean indicating if the data is expected to be periodic (start coincides with end) or not.}

\item{splines.df}{Degrees of freedom for the splines.}

\item{tol}{Tolerance on the convergence of the algorithm.}

\item{n.iters}{Maximum number of iterations.}

\item{method}{Method used in the resolution of the quantile regression model. This penalized version of \code{fqpca} requires any available solver in \code{CVXR} package.}

\item{verbose.fqpca}{Boolean indicating verbosity of the fqpca function.}

\item{verbose.cv}{Boolean indicating verbosity of the cross-validation process.}

\item{seed}{Seed for the random generator number.}
}
\value{
A list containing the matrix of scores, the matrix of loadings, a list with all the trained models (if the return_models param is TRUE) and a secondary list with extra information.
}
\description{
Performs cross validation on alpha parameter of fqpca. Only valid if method is set to one of the valid options in \code{CVXR}
}
\examples{
# Generate fake dataset with 200 observations and 144 time points

Y <- matrix(rep(sin(seq(0, 2*pi, length.out = 144)), 200), byrow = TRUE, nrow = 200)
Y <- Y + matrix(rnorm(200*144, 0, 0.4), nrow = 200)

# Add missing observations
Y[sample(200*144, as.integer(0.2*200*144))] <- NA

cv_result <- cross_validation_alpha(Y, alpha.grid = c(0, 1e-15), n.folds = 2)
}
